plugins {
    id "idea"
    id "java-library"
    id "maven-publish"
    id "org.jetbrains.kotlin.jvm" version "1.6.10"
    id "org.jetbrains.kotlin.plugin.spring" version "1.6.10"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
}

ext {
    springBootVersion = "2.6.4"
    kotlinVersion = "1.6.10"
    validationApiVersion = "2.0.1.Final"
    gsonVersion = "2.8.5"
    openApiVersion = "1.5.9"
    postgresContainerVersion = "1.16.0"
}

sourceCompatibility = 1.11
targetCompatibility = 1.11

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

[compileKotlin, compileTestKotlin]*.kotlinOptions*.jvmTarget = "11"

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
    }
}

java {
    withSourcesJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                name = "Common Service"
                description = "Common utils"
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        name = "Romanov Alex"
                        email = "romanowalex@mail.ru"
                    }
                }
                scm {
                    url = "https://github.com/Romanow/common-service/"
                }
            }
        }
    }
    repositories {
        maven {
            url = uri("https://maven.pkg.github.com/Romanow/common-service")
            credentials {
                username = System.getenv("GITHUB_USER")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

dependencies {
    api "org.springframework.boot:spring-boot-starter-web"
    api "org.springframework.boot:spring-boot-starter-data-jpa"
    api "org.springframework.boot:spring-boot-starter-actuator"
    api "org.springframework.boot:spring-boot-starter-security"
    api "org.springframework.boot:spring-boot-starter-validation"
    api "org.springframework.boot:spring-boot-starter-logging"
    api "org.springframework:spring-webflux"
    api "io.projectreactor.netty:reactor-netty-http"

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    api "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    api "org.jetbrains.kotlin:kotlin-compiler-embeddable:$kotlinVersion"

    api "org.apache.commons:commons-lang3"
    api "com.google.code.gson:gson:$gsonVersion"
    api "javax.validation:validation-api:$validationApiVersion"
    api "com.fasterxml.jackson.module:jackson-module-kotlin"

    api "org.postgresql:postgresql"
    api "org.flywaydb:flyway-core"
    api "io.micrometer:micrometer-registry-prometheus"

    api "org.springdoc:springdoc-openapi-webmvc-core:$openApiVersion"
    api "org.springdoc:springdoc-openapi-ui:$openApiVersion"
    api "org.springdoc:springdoc-openapi-kotlin:$openApiVersion"

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}

test {
    useJUnitPlatform()
}